<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="../Common/T4WarningComment.txt" #>
using System;
using Microsoft.TeamFoundation.MVVM;
using System.Windows.Input;

namespace PasswordCreator.ViewModels
{
	partial class EditViewModel : ModelBase
	{
<# foreach(Field x in fields_) { #>
		private <#= x.Type #> <#= x.Name #>_;
		public <#= x.Type #> <#= x.Name #>
		{
			get
			{
				return <#= x.Name #>_;
			}
			set
			{
				<#= x.Name #>_ = value;

				try
				{
					model_.<#= x.Name #> = value;
					base.UpdateErrors("<#= x.Name #>", "");
				}
				catch (Exception ex)
				{
					base.UpdateErrors("<#= x.Name #>", ex.Message);
				}
				RaisePropertyChanged("<#= x.Name #>");
				RaisePropertyChanged("Error");
			}
		}
<# } #>
<# foreach(string x in new string[] { "Ok", "Cancel", "Generate" }) { #>
		private ICommand _<#= x #>Command;
		public  ICommand <#= x #>Command
		{
			get
			{
				if (_<#= x #>Command == null)
				{
<# if(x == "Ok") #>
<# { #>
					_<#= x #>Command = new RelayCommand(Execute<#= x #>Command, CanExecute<#= x #>Command);
<# } #>
<# else #>
<# { #>
					_<#= x #>Command = new RelayCommand(Execute<#= x #>Command);
<# } #>
				}
				return _<#= x #>Command;
			}
		}
<# } #>

	}
}

<#+
	class Field	{
		public string Name         {set; get;}
		public string Type         {set; get;}
	}
	private static Field[] fields_ = {
		new Field { Name = "SiteName", Type = "string" },
		new Field { Name = "Url",      Type = "string" },
		new Field { Name = "UserId",   Type = "string" },
		new Field { Name = "Password", Type = "string" },
		new Field { Name = "Note",     Type = "string" },
		new Field { Name = "Category", Type = "string" }
	};
#>
